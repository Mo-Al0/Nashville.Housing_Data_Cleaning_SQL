/*


Cleaning Data in SQL Queries


*/


-------------------------------------------------------


-- Standardize Date Format


SELECT *
FROM exalted-justice-394105.Nashville.Nashville_Housing
WHERE PropertyAddress IS NULL


-- Coverting the Date Format
SELECT
FORMAT_DATE('%Y-%m-%d', PARSE_DATE('%b %d, %Y', SaleDate)) AS Formatted_SaleDate
FROM exalted-justice-394105.Nashville.Nashville_Housing


-- Updating the column in our table
UPDATE exalted-justice-394105.Nashville.Nashville_Housing
SET SaleDate = FORMAT_DATE('%Y-%m-%d', PARSE_DATE('%b %d, %Y', SaleDate))
WHERE TRUE; -- This WHERE clause ensures that all rows are updated




-- Checking our new column
SELECT SaleDate
FROM exalted-justice-394105.Nashville.Nashville_Housing


-------------------------------------------------------


-- Populate Property Address data


Select *
From exalted-justice-394105.Nashville.Nashville_Housing
order by ParcelID




SELECT a.UniqueID_, a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress,
IFNULL(a.PropertyAddress, b.PropertyAddress)
FROM `exalted-justice-394105.Nashville.Nashville_Housing` a
JOIN `exalted-justice-394105.Nashville.Nashville_Housing` b
ON a.ParcelID = b.ParcelID
AND a.`UniqueID_` <> b.`UniqueID_`
WHERE a.PropertyAddress IS NULL




UPDATE `exalted-justice-394105.Nashville.Nashville_Housing` a
SET PropertyAddress = b.PropertyAddress
FROM (
SELECT ParcelID, MIN(PropertyAddress) PropertyAddress
FROM `exalted-justice-394105.Nashville.Nashville_Housing`
WHERE NOT PropertyAddress IS NULL
GROUP BY ParcelID
) b
WHERE a.ParcelID = b.ParcelID
AND a.PropertyAddress IS NULL




-------------------------------------------------------


-- Split PropertyAddress into Individual Columns (Address, City)


Select PropertyAddress
From exalted-justice-394105.Nashville.Nashville_Housing




SELECT
SUBSTRING(PropertyAddress, 1, STRPOS(PropertyAddress,",")-1) as Address
,SUBSTRING(PropertyAddress, STRPOS(PropertyAddress,",")+1, LENGTH(PropertyAddress)) as
Address
FROM `exalted-justice-394105.Nashville.Nashville_Housing`




-- Adding the First column
ALTER TABLE `exalted-justice-394105.Nashville.Nashville_Housing`
ADD COLUMN Property_Address STRING;


UPDATE `exalted-justice-394105.Nashville.Nashville_Housing`
SET Property_Address = SUBSTRING(PropertyAddress, 1, STRPOS(PropertyAddress,",")-1)
WHERE TRUE


-- Adding the second column
ALTER TABLE `exalted-justice-394105.Nashville.Nashville_Housing`
ADD COLUMN Property_City2 STRING;


UPDATE `exalted-justice-394105.Nashville.Nashville_Housing`
SET Property_City2 = SUBSTR(PropertyAddress, STRPOS(PropertyAddress, ",") +1, LENGTH(PropertyAddress))
WHERE TRUE




-- Checking our new columns
Select *
From exalted-justice-394105.Nashville.Nashville_Housing




-------------------------------------------------------


-- Split OwnerAddress into Individual Columns (Address, City, State)Select OwnerAddress

SELECT
SPLIT(OwnerAddress, ",") [OFFSET(0)] AS Address,
SPLIT(OwnerAddress, ',')[OFFSET(1)] AS City,
SPLIT(OwnerAddress, ',')[OFFSET(2)] AS State
From exalted-justice-394105.Nashville.Nashville_Housing




-- Adding the First column
ALTER TABLE `exalted-justice-394105.Nashville.Nashville_Housing`
ADD COLUMN Owner_Address STRING;


UPDATE `exalted-justice-394105.Nashville.Nashville_Housing`
SET Owner_Address = SPLIT(OwnerAddress, ",") [OFFSET(0)]
WHERE TRUE


-- Adding the Second column
ALTER TABLE `exalted-justice-394105.Nashville.Nashville_Housing`
ADD COLUMN Owner_City STRING;


UPDATE `exalted-justice-394105.Nashville.Nashville_Housing`
SET Owner_City = SPLIT(OwnerAddress, ",") [OFFSET(1)]
WHERE TRUE


-- Adding the Third column
ALTER TABLE `exalted-justice-394105.Nashville.Nashville_Housing`
ADD COLUMN Owner_State STRING;


UPDATE `exalted-justice-394105.Nashville.Nashville_Housing`
SET Owner_State = SPLIT(OwnerAddress, ",") [OFFSET(2)]
WHERE TRUE


-- Checking our columns
Select *
From exalted-justice-394105.Nashville.Nashville_Housing








-------------------------------------------------------




-- Checking "Sold as Vacant" field

Select Distinct(SoldAsVacant), Count(SoldAsVacant) AS Total
From exalted-justice-394105.Nashville.Nashville_Housing
Group by SoldAsVacant
order by 2




-------------------------------------------------------

--Remove Duplicates

CREATE OR REPLACE TABLE `exalted-justice-394105.Nashville.Nashville_Housing` AS
SELECT *,
ROW_NUMBER() OVER (
PARTITION BY ParcelID, PropertyAddress, SalePrice, SaleDate, LegalReference
ORDER BY UniqueID_
) AS row_num
From `exalted-justice-394105.Nashville.Nashville_Housing`


-- Checking the Duplicates
Select *
From `exalted-justice-394105.Nashville.Nashville_Housing`
Where row_num > 1
Order by PropertyAddress


-- Deleting Duplicates
DELETE
From `exalted-justice-394105.Nashville.Nashville_Housing`
Where row_num > 1


-------------------------------------------------------

-- Delete Unused Columns

Select *
From `exalted-justice-394105.Nashville.Nashville_Housing`



ALTER TABLE `exalted-justice-394105.Nashville.Nashville_Housing`
DROP COLUMN PropertyAddress


ALTER TABLE `exalted-justice-394105.Nashville.Nashville_Housing`
DROP COLUMN OwnerAddress


ALTER TABLE `exalted-justice-394105.Nashville.Nashville_Housing`
DROP COLUMN TaxDistrict




